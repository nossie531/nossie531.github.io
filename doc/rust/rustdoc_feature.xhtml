<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja">
	<head>
		<title>Rust メモ: rustdoc でのフィーチャーの表示</title>
		<link rel="stylesheet" href="style/base.css"/>
		<script src="../../lib/doc.js"></script>
		<script src="lib/base.js"></script>
	</head>
	<body>
		<header>
			<h1><doc-title/></h1>
		</header>
		<p>
rustdoc で各アイテムに必要なフィーチャーを表示する方法について。
		</p>
		<aside class="normal">
			<p>
この方法を推奨できる理由。
			</p> <p>
<time>2024 年現在</time>、この方法はナイトリー版によるオプトインで実現できる。つまり、安定版でもフィーチャーの表示がされないだけである。また、<a href="https://docs.rs/">Docs.rs</a> (<a href="https://crates.io/">crates.io</a> へのクレート公開時にドキュメントをホストするサイト) での公開にも対応している。
			</p>
		</aside>
		<section>
			<h1>オプトインの仕組</h1>
			<p>
Docs.rs との連携用の構成値 <a href="https://docs.rs/about/builds#detecting-docsrs"><code>docsrs</code></a> を、不安定な機能を有効化するためのフラグとして利用する。なお、<code>docsrs</code> の導入方法は、Docs.rs とローカル環境で少し異なる。そのため、それぞれ個別に指定しなければならない。
			</p>
		</section> <section>
			<h1>サンプル</h1>
			<p>
以下では、フィーチャー <code>my_feature</code> の有効時のみ、関数 <code>my_func</code> が利用可能になる。
			</p> <p>
そして、その事について API ドキュメントに掲載するようにしている。
			</p>
			<doc-nav-sub/>
			<section>
				<hgroup>
					<h1>手順 1</h1>
					<div class="subTitle"><code>config.toml</code> ファイルの編集</div>
				</hgroup>
				<ul>
					<li>
Docs.rs での <code>rustdoc</code> コマンドの引数を指定。
					</li> <li>
フィーチャ <code>my_feature</code> を導入 (デフォルトでの使用有無も指定)。
					</li>
				</ul>
				<figure class="file">
					<figcaption>Cargo.toml</figcaption>
<pre><code class="language-toml">
# ...

[package.metadata.docs.rs]
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = ["my_feature"]
my_feature = []

# ...
</code></pre>
				</figure>
			</section> <section>
				<hgroup>
					<h1>手順 2</h1>
					<div class="subTitle">Rust ソースファイルの編集</div>
				</hgroup>
				<p>
フィーチャーを表示する方法は二通りある。
				</p> <p>
ただ、普段使いには一括指定の方法のみで十分だろう。
				</p>
				<section>
					<h2>一括指定</h2>
					<p>
不安定な機能 <a href="https://doc.rust-lang.org/unstable-book/language-features/doc-auto-cfg.html"><code>doc_auto_cfg</code></a> を使用する。
					</p> <p>
この場合、<code>main.rs</code> や <code>lib.rs</code> で全体設定を行うだけでよい。
					</p>
					<figure class="file">
						<figcaption>lib.rs</figcaption>
<pre><code class="language-rust">
#![cfg_attr(docsrs, feature(doc_auto_cfg))]

#[cfg(feature = "my_feature")]
pub fn my_func() {}
</code></pre>
					</figure>
				</section> <section>
					<h2>個別指定</h2>
					<p>
不安定な機能 <a href="https://doc.rust-lang.org/unstable-book/language-features/doc-cfg.html"><code>doc_cfg</code></a> を使用する。
					</p> <p>
この場合、関数などの各アイテムごとに設定が必要になる。
					</p>
					<figure class="file">
						<figcaption>lib.rs</figcaption>
<pre><code class="language-rust">
#![cfg_attr(docsrs, feature(doc_cfg))]

#[cfg(feature = "my_feature")]
#[cfg_attr(docsrs, doc(cfg(feature = "my_feature")))]
pub fn my_func() {}
</code></pre>
					</figure>
				</section>
			</section> <section>
				<hgroup>
					<h1>手順 3</h1>
					<div class="subTitle">コマンドの実行 (任意) </div>
				</hgroup>
				<p>
ローカルのドキュメント生成コマンドで <code>docsrs</code> を有効化する方法は二通りある。
				</p> <p>
どちらが良いかは、そのプロジェクトにおける <code>config.toml</code> ファイルの取扱による。もし、それが個人用の設定ファイル扱いで、Git などのバージョン管理システムの対象外なら、気軽に編集できるので、設定ファイルから有効化するほうが楽になる。
				</p>
				<section>
					<h2><code>docsrs</code> をコマンド引数から有効化</h2>
					<p>
以下では、<code>docsrs</code> をコマンド引数から有効化している。
					</p>
<pre><code class="console">
<mark class="prompt">&gt;</mark> cargo +nightly --config 'build.rustdocflags = [\"--cfg\", \"docsrs\"]' doc
</code></pre>
				</section> <section>
					<h2><code>docsrs</code> を設定ファイルから有効化</h2>
					<p>
以下では、<code>docsrs</code> を設定ファイルから有効化している。
					</p>
					<figure class="file">
						<figcaption>.cargo/config.toml</figcaption>
<pre><code class="language-toml">
[build]
rustdocflags = ["--cfg", "docsrs"]
</code></pre>
					</figure>
					<p>
この場合、コマンドは単純になる。
					</p>
<pre><code class="console">
<mark class="prompt">&gt;</mark> cargo +nightly doc
</code></pre>
				</section>
			</section>
		</section>
	</body>
</html>
