<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja">
	<head>
		<title>blockquote</title>
		<meta name="robots" content="noindex"/>
		<link rel="stylesheet" href="../../../../style/import/prism.css"/>
		<script src="../../../../lib/prism_shadow.js"></script>
	</head>
	<body>
		<blockquote data-time="2025-04-15" cite="https://doc.rust-lang.org/reference/crates-and-source-files.html#main-functions">
			<h2 id="main-functions">
<a class="header" href="#main-functions">メイン関数</a>
			</h2>
			<p>
<code>main</code> <a href="items/functions.html">関数</a> を含むクレートは実行可能ファイルにコンパイルできる。
			</p> <p>
もし <code>main</code> 関数があれば、それは引数をとってはならず、いかなる<a href="trait-bounds.html">トレイトやライフタイムの境界</a>も宣言してはならず、いかなる <a href="items/generics.html#where-clauses">where 句</a> も所持してはならず、また <a href="../std/process/trait.Termination.html"><code>Termination</code></a> トレイトを実装する型を戻さなければならない。
			</p>
<pre><code class="language-rust">fn main() {}</code></pre>
<pre><code class="language-rust">fn main() -&gt; ! {
    std::process::exit(0);
}</code></pre>
<pre><code class="language-rust">fn main() -&gt; impl std::process::Termination {
    std::process::ExitCode::SUCCESS
}</code></pre>
			<p>
<code>main</code> 関数はインポートになりうる、例えば、外部のクレートや現在のそれから。
			</p>
<pre><code class="language-rust">mod foo {
    pub fn bar() {
        println!("Hello, world!");
    }
}
use foo::bar as main;
</code></pre>
			<blockquote>
				<p>
<strong>Note</strong>: <a href="../std/process/trait.Termination.html"><code>Termination</code></a> の実装を伴う標準ライブラリに含まれる型:
				</p>
				<ul>
					<li> <code>()</code> </li>
					<li> <a href="types/never.html"><code>!</code></a> </li>
					<li> <a href="../core/convert/enum.Infallible.html"><code>Infallible</code></a> </li>
					<li> <a href="../std/process/struct.ExitCode.html"><code>ExitCode</code></a> </li>
					<li> <code>Result&lt;T, E&gt; where T: Termination, E: Debug</code> </li>
				</ul>
			</blockquote>
		</blockquote>
	</body>
</html>

