<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja">
	<head>
		<title>Rust メモ: Option とイテレータ</title>
		<link rel="stylesheet" href="style/base.css"/>
		<script src="../../lib/doc.js"></script>
		<script src="lib/base.js"></script>
	</head>
	<body>
		<header>
			<h1><doc-title/></h1>
		</header>
		<p>
<a href="https://doc.rust-lang.org/std/option/enum.Option.html"><code>Option</code></a> は <a href="https://doc.rust-lang.org/std/iter/trait.IntoIterator.html"><code>IntoIterator</code></a> を実装しているため、イテレータに変換できる。
		</p> 
		<aside class="normal">
			<p>
このメモの背景。
			</p> <p>
知っていると便利なマイナー機能なのでメモ。
			</p>
		</aside>
		<section>
			<h1>仕様</h1>
			<p>
<a href="https://doc.rust-lang.org/std/option/enum.Option.html"><code>Option</code></a> のイテレータは 0 個か 1 個の要素を走査する。<br/>
つまり、<a href="https://doc.rust-lang.org/std/option/enum.Option.html#variant.None"><code>None</code></a> なら 0 個、<a href="https://doc.rust-lang.org/std/option/enum.Option.html#variant.Some"><code>Some</code></a> なら 1 個となる。
			</p>
		</section> <section>
			<h1>サンプル</h1>
			<p>
以下では、<code>Option</code> を利用してコレクションに要素を選択的に追加している。
			</p>
<pre><code class="language-rust">
 fn main() {
    let mut nums = vec![];
    nums.extend(filter(0));
    nums.extend(filter(1));
    nums.extend(filter(2));
    assert_eq!(nums, vec![0, 2]);
}

fn filter(arg: i32) -&gt; Option&lt;i32&gt; {
    if arg % 2 == 0 { Some(arg) } else { None }
}
</code></pre>
		</section>
	</body>
</html>
