<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja">
	<head>
		<title>Rust メモ: E0271 - 関連型の不一致</title>
		<link rel="stylesheet" href="style/base.css"/>
		<script src="../../lib/doc.js"></script>
		<script src="lib/base.js"></script>
	</head>
	<body>
		<header>
			<h1><doc-title/></h1>
		</header>
<pre><samp class="console-rustc">
<mark class="error">error[E0271]</mark><mark class="title">: type mismatch resolving `&lt;TypeX as Trait&gt;::Assoc == TypeY`</mark>
</samp></pre>
		<p>
『<a href="associated_type.xhtml">関連型</a>』が期待する型と異なっていた。
		</p>
		<section>
			<h1>原因</h1>
			<p>
トレイト境界が関連型まで指定されており、対象の型はそれに適合する事が期待されていた。しかし、対象の型は指定されたトレイトについては実装していたものの、トレイトの関連型として導かれるのは指定された型とは異なる型だった。
			</p>
		</section> <section>
			<h1>パターン</h1>
			<doc-nav-sub/>
			<section>
				<hgroup>
					<h1>パターン A</h1>
					<div class="subTitle">基本形</div>
				</hgroup>
				<p>
単純に関連型が一致しないパターン。
				</p>
				<section>
					<h2>サンプル</h2>
					<p>
以下では、<code>func</code> に渡される <code>u32</code> 型が引数型 <code>T</code> の境界に適合せずエラーになる。なぜなら、<code>u32</code> 型は <code>Unsigned</code> トレイトを実装するが、<code>Unsigned::Signed</code> として導かれる型は <code>i64</code> ではなく <code>i32</code> になる。
					</p>
<pre><code class="language-rust">
fn main() {
    func(<mark class="error">1_u32</mark>);
}

fn func&lt;T&gt;(val: T) where T: Unsigned&lt;Signed=i64&gt; {
    println!("{}", val.negative());
}

trait Unsigned {
    type Signed;
    fn negative(&amp;self) -&gt; Self::Signed;
}

impl Unsigned for u32 {
    type Signed = i32;
    fn negative(&amp;self) -&gt; Self::Signed {
        -(*self as i32)
    }
}
</code></pre>
<pre><samp class="console-rustc">
<mark class="error">error[E0271]</mark><mark class="title">: type mismatch resolving `&lt;u32 as Unsigned&gt;::Signed == i64`</mark>
<mark class="info">  --&gt;</mark> src\main.rs:2:10
<mark class="info">   |</mark>
<mark class="info">2  |</mark>     func(1_u32);
<mark class="info">   |</mark>     <mark class="info">----</mark> <mark class="error">^^^^^ type mismatch resolving `&lt;u32 as Unsigned&gt;::Signed == i64`</mark>
<mark class="info">   |</mark>     <mark class="info">|</mark>
<mark class="info">   |</mark>     <mark class="info">required by a bound introduced by this call</mark>
<mark class="info">   |</mark>
<mark class="edit">note</mark>: expected this to be `i64`
<mark class="info">  --&gt;</mark> src\main.rs:15:19
<mark class="info">   |</mark>
<mark class="info">15 |</mark>     type Signed = i32;
<mark class="info">   |</mark>                   <mark class="edit">^^^</mark>
<mark class="edit">note</mark>: required by a bound in `func`
<mark class="info">  --&gt;</mark> src\main.rs:5:38
<mark class="info">   |</mark>
<mark class="info">5  |</mark> fn func&lt;T&gt;(val: T) where T: Unsigned&lt;Signed=i64&gt; {
<mark class="info">   |</mark>                                      <mark class="edit">^^^^^^^^^^ required by this bound in `func`</mark>
</samp></pre>
				</section>
			</section> <section>
				<hgroup>
					<h1>パターン B</h1>
					<div class="subTitle">Comming soon?</div>
				</hgroup>
				<p>
<time>2025 年現在</time>、次期トレイトソルバーとして期待される next-solver が出力しているエラー。これは元は E0308 として出力されていた。詳しくは､『<a href="e0308.xhtml">E0308</a> - <a href="e0308.xhtml#hrtbTypeInference">HRTB を期待する型推論</a>』を参照されたい。
				</p>
			</section>
		</section>
	</body>
</html>
