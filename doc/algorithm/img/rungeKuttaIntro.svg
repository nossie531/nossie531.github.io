<?xml version="1.0" encoding="utf-8"?>
<svg xmlns="http://www.w3.org/2000/svg"
	xmlns:m="http://www.w3.org/1998/Math/MathML"
	viewBox="0 0 250 150" height="150">
	<style>
@import url("style/rungeKutta.css");
	</style>
	<script href="lib/graphViewer.js"/>
	<script href="lib/rungeKutta.js"/>
	<script><![CDATA[
const vals = {
	iv: 0.7,
	step: 0.05,
	range: {min: 0, max: 3.1},
	origin: {x: 7.5, y: 7.5},
	gridArea: {x:10, y:20, width: 210, height: 120},
	df: (x, y) => (0.3 * (x - 0.5) * (x - 2) + y * 0.2)
};

document.addEventListener("DOMContentLoaded", () => {
	const viewer = setupViewer();
	setupInitalValue(viewer);
	setupFlows(viewer, 4);
});

function setupViewer() {
	const result = new GraphViewer(vals.gridArea, vals.origin, 65);
	result.appendAxis("axis");
	return result;
}

function setupInitalValue(viewer) {
	const elm = document.getElementById("initialValue");
	viewer.setCircle(elm, {x: 0, y: vals.iv});
}

function setupFlows(viewer, n) {
	const stepY = vals.iv / n;
	const flows = document.getElementById("flows");
	const ns = document.documentElement.namespaceURI;
	for (let i = -4; i < 6; i++) {
		const value = vals.iv + i * stepY;
		const points = getAlgorithm(value).result();
		const path = document.createElementNS(ns, "path");
		path.classList.add(i === 0 ? "real" : "flow");
		viewer.setFuncPath(path, points);
		flows.append(path);
	}

	function appendFlow(value, className) {
		const points = getAlgorithm(value).result();
		const path = document.createElementNS(ns, "path");
		path.classList.add(className);
		viewer.setFuncPath(path, points);
		flows.append(path);
	}
}

function getAlgorithm(value) {
	const result = new KuttasThirdOrder;
	result.df = vals.df;
	result.range = vals.range;
	result.value = value;
	result.step = vals.step;
	return result;
}
	]]></script>
	<defs>
		<marker id="arrow" markerUnits="userSpaceOnUse" orient="auto-start-reverse"
			markerWidth="20" markerHeight="20" viewBox="-10 -10 20 20">
			<path d="M2,0 L-4,3 -4,-3 Z"/>
		</marker>
	</defs>
	<g>
		<!-- 流れ線。-->
		<g id="flows"/>
		<!-- 座標軸。-->
		<g id="axis">
			<foreignObject class="x" width="30" height="30">
				<m:math><m:mi>t</m:mi></m:math>
			</foreignObject>
		</g>
		<!-- 初期値。-->
		<circle id="initialValue" class="iv" r="3"/>
	</g>
</svg>
