<?xml version="1.0" encoding="utf-8"?>
<svg xmlns="http://www.w3.org/2000/svg"
	xmlns:m="http://www.w3.org/1998/Math/MathML"
	viewBox="0 0 210 230">
	<style>
@import url("style/diffEq.css");
	</style>
	<script href="lib/graphViewer.js"/>
	<script href="lib/matrix.js"/>
	<script href="lib/diffEq.js"/>
	<script><![CDATA[
document.addEventListener("DOMContentLoaded", () => {
	const ctx = getContext();
	const viewer = new GraphViewer(ctx.gridArea, ctx.origin);
	viewer.appendAxis("axis");
	viewer.appendGridX("step", ctx.largeStep);
	drawReal(viewer);
	drawCalc(viewer);
	drawError(viewer);
});

function drawReal(viewer) {
	const pathArr = getAlgorithm(getContext().smallStep).result();
	viewer.setFuncPath("f1", pathArr[0]);
	viewer.setFuncPath("f2", pathArr[1]);
	viewer.setPathLine("g1", pathArr[0].splice(0, 2), 30);
	viewer.setPathLine("g2", pathArr[1].splice(0, 2), 30);
}

function drawCalc(viewer) {
	const pathArr = getAlgorithm().result();
	viewer.setFuncPath("c1", pathArr[0]);
	viewer.setFuncPath("c2", pathArr[1]);
	viewer.setLabel("n1", pathArr[0][0], -20, -10);
	viewer.setLabel("n2", pathArr[1][0], -20, -10);
}

function drawError(viewer) {
	const real = getAlgorithm(getContext().smallStep).result();
	const calc = getAlgorithm().result();
	const e1 = [real[0].at(-1), calc[0].at(-1)];
	const e2 = [real[1].at(-1), calc[1].at(-1)];
	viewer.setPath("et1", e1);
	viewer.setPath("et2", e2);
	viewer.setPath("eb1", e1);
	viewer.setPath("eb2", e2);
	viewer.setLabel("errorText", getErrorTextPos(e1), 10);
}

function getAlgorithm(step) {
	const result = new ExplicitDiffEq;
	result.dc = getContext().dc;
	result.step = step || getContext().largeStep;
	result.range = getContext().range;
	result.nodes = getContext().nodes;
	return result;
}

function getContext() {
	return {
		dc: 0.0025,
		diff: 30,
		smallStep: 5,
		largeStep: 140,
		range: {min: 0, max: 140},
		origin: {x: 10, y: 10},
		gridArea: {x: 15, y:20, width: 150, height: 200},
		nodes: [180, 20]
	};
}

function getErrorTextPos(error) {
	return {x: error[0].x, y: (error[0].y + error[1].y) / 2};
}
	]]></script>
	<defs>
		<marker id="point" markerUnits="userSpaceOnUse"
			markerWidth="10" markerHeight="10" viewBox="-5 -5 10 10">
			<circle r="2"/>
		</marker>
		<marker id="arrow" markerUnits="userSpaceOnUse" orient="auto-start-reverse"
			markerWidth="20" markerHeight="20" viewBox="-10 -10 20 20">
			<path d="M2,0 L-4,3 -4,-3"/>
		</marker>
		<marker id="gradSrc" markerUnits="userSpaceOnUse"
			markerWidth="10" markerHeight="10" viewBox="-5 -5 10 10">
			<circle r="2.5"/>
		</marker>
		<marker id="gradDst" markerUnits="userSpaceOnUse" orient="auto-start-reverse"
			markerWidth="20" markerHeight="20" viewBox="-10 -10 20 20">
			<path d="M2,0 L-6,3 -6,-3 Z"/>
		</marker>
		<marker id="tickMark" markerUnits="userSpaceOnUse" orient="auto"
			markerWidth="10" markerHeight="20" viewBox="-5 -10 10 20">
			<path d="M 0,-5 V 5"/>
		</marker>
	</defs>
	<g>
		<!-- 座標軸。-->
		<g id="axis">
			<foreignObject class="x" width="30" height="30">
				<m:math><m:mi>t</m:mi></m:math>
			</foreignObject>	
		</g>
		<!-- ステップ。-->
		<g id="step"/>
		<!-- 誤差表示。-->
		<text id="errorText">Error</text>
		<path id="et1" class="errorTick"/>
		<path id="et2" class="errorTick"/>
		<path id="eb1" class="errorBand"/>
		<path id="eb2" class="errorBand"/>
		<!-- 流れ線。-->
		<path id="f1" class="real"/>
		<path id="f2" class="real"/>
		<!-- 計算値。-->
		<path id="c1" class="calc endCap"/>
		<path id="c2" class="calc endCap"/>
		<!-- 勾配の方向。-->
		<path id="g1" class="grad"/>
		<path id="g2" class="grad"/>
		<!-- ノードラベル。-->
		<foreignObject id="n1" width="30" height="30">
			<m:math><m:msub><m:mi>n</m:mi><m:mn>1</m:mn></m:msub></m:math>
		</foreignObject>
		<foreignObject id="n2" width="30" height="30">
			<m:math><m:msub><m:mi>n</m:mi><m:mn>2</m:mn></m:msub></m:math>
		</foreignObject>
	</g>
</svg>

