<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
	  xmlns:m="http://www.w3.org/1998/Math/MathML"
	  xml:lang="ja">
	<head>
		<title>拡散方程式の初期値問題</title>
		<link rel="stylesheet" href="style/base.css"/>
		<link rel="stylesheet" href="style/diffEq.css"/>
		<style>/*<![CDATA[*/
/* Polyfill for mtable attributes. */
@namespace m url("http://www.w3.org/1998/Math/MathML");
m|mtable[columnalign="right left"] > m|mtr > m|mtd:nth-child(1) { text-align: right; }
m|mtable[columnalign="right left"] > m|mtr > m|mtd:nth-child(2) { text-align: left; }
m|mtable[columnspacing="0"] > m|mtr > m|mtd { padding-left: 0; padding-right: 0; }
		/*]]>*/</style>
		<script src="lib/base.js"></script>
	</head>
	<body>
		<header>
			<h1><script>Base.insertTitle();</script></h1>
		</header>
		<p class="todo">
注: 書きかけです (残: Exponential Integrator について)。
		</p> <p>
ネットワーク上の拡散方程式の初期値問題について、各アルゴリズムの特徴を紹介する。
		</p>
		<section>
			<h1>導入</h1>
			<section>
				<h1>問題設定</h1>
				<p>
対象のネットワークでは、各ノードが重みつきのエッジを通して影響を与えあう。
				</p> <p>
この状況で各ノードの値がどのように時間発展していくかを求める。
				</p>
				<figure class="normal">
					<object data="img/diffEqNetwork.svg" style="height: 15rem;"/>
					<figcaption>ネットワークの例</figcaption>
				</figure>
			</section> <section>
				<h1>応用先</h1>
				<p>
この問題は例えば、集団での助け合いをモデル化できる。ここで、各ノードの値は各人物の資金を表す。また、エッジの重みで各人物どうしの親密度を表す。そして、親密度と貧富の差の積により、互いを平均化する方向に資金を融通していく。
				</p> <p>
なお、この応用は他の多くの応用と共通するエッジの特徴を持つ。まず、資金は他の人物とのやり取り以外では増減しないので、ノードの自身へのエッジは 1 である。さらに、入金と出金は同額でなければならないため、エッジはその逆方向のものと同じ値になる。
				</p>
			</section> <section>
				<h1>記号の定義</h1>
				<ul>
					<li>
<m:math><m:msub><m:mi>n</m:mi><m:mi>i</m:mi></m:msub><m:mo>(</m:mo><m:mi>t</m:mi><m:mo>)</m:mo></m:math> は <m:math><m:mi>i</m:mi></m:math> 番目のノードの時刻 <m:math><m:mi>t</m:mi></m:math> の値
					</li> <li>
<m:math><m:msub><m:mi>w</m:mi><m:mrow><m:mi>i</m:mi><m:mi>j</m:mi></m:mrow></m:msub></m:math> は <m:math><m:msub><m:mi>n</m:mi><m:mi>i</m:mi></m:msub></m:math> への <m:math><m:msub><m:mi>n</m:mi><m:mi>j</m:mi></m:msub></m:math> からのエッジの重み
					</li> <li>
<m:math><m:mi>𝒏</m:mi></m:math> は全ての <m:math><m:mi>i</m:mi></m:math> についての <m:math><m:msub><m:mi>n</m:mi><m:mi>i</m:mi></m:msub></m:math> からなるベクトル
					</li> <li>
<m:math><m:mi>𝐖</m:mi></m:math> は全ての<m:math><m:mi>i</m:mi><m:mi>j</m:mi></m:math> についての <m:math><m:msub><m:mi>w</m:mi><m:mrow><m:mi>i</m:mi><m:mi>j</m:mi></m:mrow></m:msub></m:math> からなる正方行列
					</li>
				</ul>
			</section> <section>
				<h1>時間発展</h1>
				<p>
線形の操作のみを考えた場合、微小時間 <m:math><m:mo>∆</m:mo><m:mi>t</m:mi></m:math> の発展は以下のように表せる。
				</p>
				<div class="math">
<m:math display="block">
	<m:mrow>
		<m:mi>𝒏</m:mi>
		<m:mo>(</m:mo>
		<m:mi>t</m:mi><m:mo>+</m:mo><m:mo>∆</m:mo><m:mi>t</m:mi>
		<m:mo>)</m:mo>
	</m:mrow>
	<m:mo>=</m:mo>
	<m:mi>𝐀</m:mi>
	<m:mrow>
		<m:mi>𝒏</m:mi>
		<m:mo>(</m:mo>
		<m:mi>t</m:mi>
		<m:mo>)</m:mo>
	</m:mrow>
	<m:mo>∆</m:mo><m:mi>t</m:mi>
</m:math>
				</div>
				<p>
ここで、<m:math><m:mi>𝐀</m:mi></m:math> は各応用から導かれる正方行列である。例えば、前述の集団での助け合いの例では以下のように表せる (これはネットワークにおけるラプラシアン行列の -1 倍である)。
				</p>
				<div class="math">
<m:math display="block">
	<m:mi>𝐀</m:mi>
	<m:mo>=</m:mo>
	<m:mi>𝐖</m:mi>
	<m:mo>−</m:mo>
	<m:mi>𝐃</m:mi>
</m:math>
				</div>
				<div class="math">
<m:math display="block">
	<m:mi>𝐃</m:mi>
	<m:mo>=</m:mo>
	<m:mstyle displaystyle="true">
		<m:mo stretchy="true">[</m:mo>
		<m:msub><m:mi>δ</m:mi><m:mrow><m:mi>i</m:mi><m:mi>j</m:mi></m:mrow></m:msub>
		<m:mrow>
			<m:munder>
				<m:mo stretchy="true">∑</m:mo>
				<m:mrow><m:mi>k</m:mi><m:mo>≠</m:mo><m:mi>i</m:mi></m:mrow>
			</m:munder>
			<m:msub><m:mi>w</m:mi><m:mrow><m:mi>i</m:mi><m:mi>k</m:mi></m:mrow></m:msub>
		</m:mrow>
		<m:mo stretchy="true">]</m:mo>
	</m:mstyle>
</m:math>
				</div>
			</section>
		</section> <section>
			<h1>Runge-Kutta 法</h1>
			<p>
代表的な初期値問題の解法『<a href="rungeKutta.xhtml">Runge-Kutta 法</a>』を使った場合について。
			</p>
			<section>
				<h2>問題点 1. 安定性</h2>
				<p>
陽解法では、ノードの値に急な変化があると安定しなくなる。
				</p>
			</section> <section>
				<h2>問題点 2. 速度</h2>
				<p>
陰解法では、密なネットワークにも対応しようとすると遅くなる。
				<p> </p>
なぜなら、<a href="linearEq.xhtml">連立線形方程式</a>の行列が密になり、反復法でなく直接法が必要となる。
				</p>
			</section> <section>
				<h2>問題点 3. 精度</h2>
				<p>
精度が低い。次数を上げれば改善されるが、アルゴリズムも複雑になる。
				</p> <p>
後述の例では 1 次と 2 次で全体の傾向を示しているが、高次でもこの傾向は変わらない。
				</p>
			</section> <section>
				<h1>1 次の陽解法</h1>
				<p>
現時点からの傾き次時点の値を求める。
				</p> <p>
つまり、前述の <m:math><m:mrow><m:mi>𝒏</m:mi><m:mo>(</m:mo><m:mi>t</m:mi><m:mo>+</m:mo><m:mo>∆</m:mo><m:mi>t</m:mi><m:mo>)</m:mo></m:mrow><m:mo>=</m:mo><m:mi>𝐀</m:mi><m:mrow><m:mi>𝒏</m:mi><m:mo>(</m:mo><m:mi>t</m:mi><m:mo>)</m:mo></m:mrow><m:mo>∆</m:mo><m:mi>t</m:mi></m:math> をそのまま使用する。
				</p> <p>
以下は、ノードが 2 つしかない状況での 1 ステップ分の計算イメージ。
				</p>
				<figure class="normal">
					<object data="img/diffEqExplicit.svg" style="height: 23rem;"/>
					<figcaption>陽解法での計算</figcaption>
				</figure>
				<p>
以下は、ノードが 2 つしかない状況での複数ステップ分の計算イメージ。傾きがステップ幅に対して大きすぎると、誤差が発振して不安定になる。
				</p>
				<div class="cmpFigure full">
					<figure class="normal">
						<object data="img/diffEqExplicitVsSmallDc.svg"/>
						<figcaption>傾き小 → 安定</figcaption>
					</figure>
					<figure class="normal">
						<object data="img/diffEqExplicitVsLargeDc.svg"/>
						<figcaption>傾き大 → 不安定</figcaption>
					</figure>
				</div>
			</section> <section>
				<h1>1 次の陰解法</h1>
				<p>
次時点からの傾きが現時点に繋がるよう、次時点の値を調整する。
				</p> <p>
つまり、次の連立線形方程式を <m:math><m:mi>n</m:mi><m:mo>(</m:mo><m:mi>t</m:mi><m:mo>+</m:mo><m:mo>∆</m:mo><m:mi>t</m:mi><m:mo>)</m:mo></m:math> について解けばよい。
				</p>
				<div class="math">
<m:math display="block">
	<m:mo>-</m:mo>
	<m:mi>𝐀</m:mi>
	<m:mrow>
		<m:mi>𝒏</m:mi>
		<m:mo>(</m:mo>
		<m:mi>t</m:mi><m:mo>+</m:mo><m:mo>∆</m:mo><m:mi>t</m:mi>
		<m:mo>)</m:mo>
	</m:mrow>
	<m:mo>=</m:mo>
	<m:mrow>
		<m:mi>𝒏</m:mi>
		<m:mo>(</m:mo>
		<m:mi>t</m:mi>
		<m:mo>)</m:mo>
	</m:mrow>
	<m:mo>∆</m:mo><m:mi>t</m:mi>
</m:math>				
				</div>
				<p>
以下は、ノードが 2 つしかない状況での 1 ステップ分の計算イメージ。
				</p>
				<figure class="normal">
					<object data="img/diffEqImplicit.svg" style="height: 23rem;"/>
					<figcaption>陰解法での計算</figcaption>
				</figure>
				<p>
以下は、ノードが 2 つしかない状況での複数ステップ分の計算イメージ。傾きとステップ幅の大きさによらず、無条件安定となる。
				</p>
				<div class="cmpFigure full">
					<figure class="normal">
						<object data="img/diffEqImplicitVsSmallDc.svg"/>
						<figcaption>傾き小 → 安定</figcaption>
					</figure>
					<figure class="normal">
						<object data="img/diffEqImplicitVsLargeDc.svg"/>
						<figcaption>傾き大 → 安定</figcaption>
					</figure>
				</div>
			</section> <section>
				<h1>2 次の陰解法 <span class="navNone">(Crank-Nicolson 法)</span></h1>
				<p>
現時点と次時点の傾きの平均が、次時点に繋がるよう次時点を調整する。
				</p> <p>
つまり、次の連立線形方程式を <m:math><m:mi>n</m:mi><m:mo>(</m:mo><m:mi>t</m:mi><m:mo>+</m:mo><m:mo>∆</m:mo><m:mi>t</m:mi><m:mo>)</m:mo></m:math> について解けばよい。
				</p>
				<div class="math">
<m:math display="block">
	<m:mfrac>
		<m:mrow>
			<m:mrow>
				<m:mi>𝒏</m:mi>
				<m:mo>(</m:mo>
				<m:mi>t</m:mi><m:mo>+</m:mo><m:mo>∆</m:mo><m:mi>t</m:mi>
				<m:mo>)</m:mo>
			</m:mrow>
			<m:mo>-</m:mo>
			<m:mrow>
				<m:mi>𝒏</m:mi>
				<m:mo>(</m:mo>
				<m:mi>t</m:mi>
				<m:mo>)</m:mo>
			</m:mrow>
		</m:mrow>
		<m:mrow>
			<m:mo>∆</m:mo><m:mi>t</m:mi>
		</m:mrow>
	</m:mfrac>
	<m:mo>=</m:mo>
	<m:mrow>
		<m:mrow>
			<m:mo>(</m:mo>
			<m:mi>𝐀</m:mi>
			<m:mo>∆</m:mo><m:mi>t</m:mi>
			<m:mo>-</m:mo>
			<m:mi>𝐄</m:mi>
			<m:mo>)</m:mo>
		</m:mrow>
		<m:mrow>
			<m:mo stretchy="true">{</m:mo>
			<m:mrow>
				<m:mfrac>
					<m:mn>1</m:mn>
					<m:mn>2</m:mn>
				</m:mfrac>
				<m:mrow>
					<m:mi>𝒏</m:mi>
					<m:mo>(</m:mo>
					<m:mi>t</m:mi>
					<m:mo>)</m:mo>
				</m:mrow>
			</m:mrow>
			<m:mo>+</m:mo>
			<m:mrow>
				<m:mfrac>
					<m:mn>1</m:mn>
					<m:mn>2</m:mn>
				</m:mfrac>
				<m:mrow>
					<m:mi>𝒏</m:mi>
					<m:mo>(</m:mo>
					<m:mi>t</m:mi><m:mo>+</m:mo><m:mo>∆</m:mo><m:mi>t</m:mi>
					<m:mo>)</m:mo>
				</m:mrow>
			</m:mrow>
			<m:mo stretchy="true">}</m:mo>
		</m:mrow>
	</m:mrow>
</m:math>
				</div>
				<p>
以下は、ノードが 2 つしかない状況での 1 ステップ分の計算イメージ。
				</p>
				<figure class="normal">
					<object data="img/diffEqCrankNicolson.svg" style="height: 23rem;"/>
					<figcaption>Crank-Nicolson 法での計算</figcaption>
				</figure>
				<p>
以下は、ノードが 2 つしかない状況での複数ステップ分の計算イメージ。傾きが大きいと振動することもあるが、その振幅はステップごとに減衰していく。
				</p>
				<div class="cmpFigure full">
					<figure class="normal">
						<object data="img/diffEqCrankNicolsonVsSmallDc.svg"/>
						<figcaption>傾き小 → 安定</figcaption>
					</figure>
					<figure class="normal">
						<object data="img/diffEqCrankNicolsonVsLargeDc.svg"/>
						<figcaption>傾き大 → 安定 (振動あり)</figcaption>
					</figure>
				</div>
			</section>
		</section>
	</body>
</html>
