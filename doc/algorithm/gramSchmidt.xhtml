<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
	  xmlns:m="http://www.w3.org/1998/Math/MathML"
	  xml:lang="ja">
	<head>
		<title>Gram-Schmidt 法</title>
		<link rel="stylesheet" href="style/base.css"/>
		<script src="lib/base.js"></script>
	</head>
	<body>
		<header>
			<h1><script>Base.insertTitle();</script></h1>
		</header>
		<p>
このアルゴリズムでは、入力に線形独立なベクトルの組を与え、出力にそれらと同じ部分空間を張る正規直行系のベクトルの組を得る。
		</p> 
		<section>
			<h1>導入</h1>
			<section>
				<h1>基本戦略</h1>
				<p>
直交化して正規化する (正規化は不要なら省略可能)。
				</p>
				<section>
					<h2>直交化</h2>
					<p>
まだ直交化されていないベクトルを一つ選び、そこからすでに直行化してある全てのベクトルついて、その方向の成分を除去すると、直行化されたベクトルが一つ増える。この作業を繰り返すと、全てのベクトルを直交化できる。
					</p> <p>
以下では、ベクトル <m:math><m:msub><m:mi>𝒙</m:mi><m:mn>3</m:mn></m:msub></m:math> を直行化が完了済のベクトル <m:math><m:msub><m:mi>𝒚</m:mi><m:mn>1</m:mn></m:msub></m:math> と <m:math><m:msub><m:mi>𝒚</m:mi><m:mn>2</m:mn></m:msub></m:math> に直交化させ、<m:math><m:msub><m:mi>𝒚</m:mi><m:mn>3</m:mn></m:msub></m:math> を求めている。ここで、<m:math><m:mi>proj</m:mi><m:mo stretchy="false">(</m:mo><m:msub><m:mi>𝒙</m:mi><m:mn>3</m:mn></m:msub><m:mo>,</m:mo><m:msub><m:mi>𝒚</m:mi><m:mn>1</m:mn></m:msub><m:mo stretchy="false">)</m:mo></m:math> と <m:math><m:mi>proj</m:mi><m:mo stretchy="false">(</m:mo><m:msub><m:mi>𝒙</m:mi><m:mn>3</m:mn></m:msub><m:mo>,</m:mo><m:msub><m:mi>𝒚</m:mi><m:mn>2</m:mn></m:msub><m:mo stretchy="false">)</m:mo></m:math> は <m:math><m:msub><m:mi>𝒙</m:mi><m:mn>3</m:mn></m:msub></m:math> の <m:math><m:msub><m:mi>𝒚</m:mi><m:mn>1</m:mn></m:msub></m:math> と <m:math><m:msub><m:mi>𝒚</m:mi><m:mn>2</m:mn></m:msub></m:math> 方向の成分を表す。
					</p>
					<figure class="normal">
						<iframe loading="lazy"
								src="img/gramSchmidt.svg"
							    style="width: 40rem; height: 30rem;"/>
						<figcaption>直交化のイメージ</figcaption>
					</figure>
				</section> <section>
					<h2>正規化</h2>
					<p>
直交化された各ベクトルをその大きさで割り、単位ベクトルにする。
					</p>
				</section>
			</section> <section>
				<h1>記号の定義</h1>
				<ul>
					<li>
入力ベクトルの組: <m:math><m:mo>{</m:mo><m:msub><m:mi>𝒙</m:mi><m:mn>1</m:mn></m:msub><m:mo>,</m:mo><m:msub><m:mi>𝒙</m:mi><m:mn>2</m:mn></m:msub><m:mo>,</m:mo><m:mo>⋯</m:mo> <m:mo>,</m:mo><m:msub><m:mi>𝒙</m:mi><m:mi>n</m:mi></m:msub><m:mo>}</m:mo></m:math>
					</li> <li>
直行ベクトルの組: <m:math><m:mo>{</m:mo><m:msub><m:mi>𝒚</m:mi><m:mn>1</m:mn></m:msub><m:mo>,</m:mo><m:msub><m:mi>𝒚</m:mi><m:mn>2</m:mn></m:msub><m:mo>,</m:mo><m:mo>⋯</m:mo> <m:mo>,</m:mo><m:msub><m:mi>𝒚</m:mi><m:mi>n</m:mi></m:msub><m:mo>}</m:mo></m:math>
					</li>
				</ul>
			</section> <section>
				<h1>操作の定義</h1>
				<p>
平行成分は以下のように求められる。
				</p>
				<div class="math">
					<m:math display="block">
						<m:mrow>
							<m:mi>proj</m:mi>
							<m:mo stretchy="false">(</m:mo>
							<m:mi>𝒂</m:mi>
							<m:mo>,</m:mo>
							<m:mi>𝒃</m:mi>
							<m:mo stretchy="false">)</m:mo>
						</m:mrow>
						<m:mo>=</m:mo>
						<m:mfrac>
							<m:mrow>
								<m:mo>&#x27E8;</m:mo>
								<m:mi>𝒂</m:mi>
								<m:mo>,</m:mo>
								<m:mi>𝒃</m:mi>
								<m:mo>&#x27E9;</m:mo>
							</m:mrow>
							<m:mrow>
								<m:mo>&#x27E8;</m:mo>
								<m:mi>𝒃</m:mi>
								<m:mo>,</m:mo>
								<m:mi>𝒃</m:mi>
								<m:mo>&#x27E9;</m:mo>
							</m:mrow>
						</m:mfrac>
						<m:mi>𝒃</m:mi>
					</m:math>
				</div>
			</section>
		</section> <section>
			<h1>各種アルゴリズム</h1>
			<section>
				<h1>
古典版 <span class="navNone">(古典的 Gram-Shmidt 法)</span>
				</h1>
				<section>
					<h2>特徴</h2>
					<p>
数学的には正しいが、計算機で解くと誤差が大きくなる。
					</p>
				</section> <section>
					<h2>手順</h2>
					<p>
直行化における平行成分の計算を愚直に行う。
					</p> <p>
つまり、<m:math><m:msub><m:mi>𝒚</m:mi><m:mn>k</m:mn></m:msub></m:math> は以下のように計算される。
					</p>
					<div class="math">
						<m:math display="block">
							<m:mrow>
								<m:msub><m:mi>𝒚</m:mi><m:mi>k</m:mi></m:msub>
								<m:mo>=</m:mo>
								<m:msub><m:mi>𝒙</m:mi><m:mi>k</m:mi></m:msub>
								<m:mo>-</m:mo>
								<m:munderover>
									<m:mo>∑</m:mo>
									<m:mrow><m:mi>i</m:mi><m:mo>=</m:mo><m:mn>1</m:mn></m:mrow>
									<m:mrow><m:mi>k</m:mi><m:mo>-</m:mo><m:mn>1</m:mn></m:mrow>
								</m:munderover>
								<m:mrow>
									<m:mi>proj</m:mi>
									<m:mo stretchy="false">(</m:mo>
									<m:msub><m:mi>𝒙</m:mi><m:mi>k</m:mi></m:msub>
									<m:mo>,</m:mo>
									<m:msub><m:mi>𝒚</m:mi><m:mi>i</m:mi></m:msub>
									<m:mo stretchy="false">)</m:mo>
								</m:mrow>
							</m:mrow>
						</m:math>
					</div>
				</section>
			</section> <section>
				<h1>
修正版 <span class="navNone">(修正 Gram-Schmidt 法)</span>
				</h1>
				<section>
					<h2>特徴</h2>
					<p>
数学的には古典版と同じだが、計算機で解いた場合の誤差がそれより小さい。
					</p>
				</section> <section>
					<h2>手順</h2>
					<p>
直行化における平行成分の計算を、対象ベクトルから他の平行成分を除去した後に行う。
					</p> <p>
つまり、<m:math><m:msub><m:mi>𝒚</m:mi><m:mn>k</m:mn></m:msub></m:math> は以下のように計算される。
					</p>
					<div class="math">
						<m:math display="block">
							<m:msub><m:mi>𝒚</m:mi><m:mi>k</m:mi></m:msub>
							<m:mo>=</m:mo>
							<m:msubsup>
								<m:mi>𝒘</m:mi>
								<m:mi>k</m:mi>
								<m:mi>k</m:mi>
							</m:msubsup>
						</m:math>
					</div>
					<div class="math">
						<m:math display="block">
							<m:msubsup>
								<m:mi>𝒘</m:mi>
								<m:mi>k</m:mi>
								<m:mi>i</m:mi>
							</m:msubsup>
							<m:mo>=</m:mo>
							<m:msubsup>
								<m:mi>𝒘</m:mi>
								<m:mi>k</m:mi>
								<m:mrow><m:mi>i</m:mi><m:mo>-</m:mo><m:mn>1</m:mn></m:mrow>
							</m:msubsup>
							<m:mo>-</m:mo>
							<m:mrow>
								<m:mi>proj</m:mi>
								<m:mo stretchy="false">(</m:mo>
								<m:msubsup>
									<m:mi>𝒘</m:mi>
									<m:mi>k</m:mi>
									<m:mrow><m:mi>i</m:mi><m:mo>-</m:mo><m:mn>1</m:mn></m:mrow>
								</m:msubsup>
								<m:mo>,</m:mo>
								<m:msub><m:mi>𝒚</m:mi><m:mi>i</m:mi></m:msub>
								<m:mo stretchy="false">)</m:mo>
							</m:mrow>
						</m:math>
					</div>
					<div class="math">
						<m:math display="block">
							<m:msubsup>
								<m:mi>𝒘</m:mi>
								<m:mi>k</m:mi>
								<m:mn>0</m:mn>
							</m:msubsup>
							<m:mo>=</m:mo>
							<m:msub><m:mi>𝒙</m:mi><m:mi>k</m:mi></m:msub>
						</m:math>
					</div>
					<p>
ここで <m:math><m:mo>{</m:mo><m:msubsup><m:mi>𝒘</m:mi><m:mi>k</m:mi><m:mn>0</m:mn></m:msubsup><m:mo>,</m:mo><m:mo>⋯</m:mo><m:mo>,</m:mo><m:msubsup><m:mi>𝒘</m:mi><m:mi>k</m:mi><m:mi>k</m:mi></m:msubsup><m:mo>}</m:mo></m:math> は <m:math><m:msub><m:mi>𝒚</m:mi><m:mi>k</m:mi></m:msub></m:math> の計算途中のワーク変数である。
					</p>
				</section> <section>
					<h2>備考 (誤差の改良点)</h2>
					<p>
					古典版と修正版、それぞれの <m:math><m:mi>i</m:mi></m:math> 回目のループの以下の箇所に着目する。
					</p> <p>
古典版: <m:math><m:mi>proj</m:mi><m:mo stretchy="false">(</m:mo><m:msub><m:mi>𝒙</m:mi><m:mi>k</m:mi></m:msub><m:mo>,</m:mo><m:msub><m:mi>𝒚</m:mi><m:mi>i</m:mi></m:msub><m:mo stretchy="false">)</m:mo></m:math>
					</p> <p>
修正版: <m:math><m:mi>proj</m:mi><m:mo stretchy="false">(</m:mo><m:msubsup><m:mi>𝒘</m:mi><m:mi>k</m:mi><m:mrow><m:mi>i</m:mi><m:mo>-</m:mo><m:mn>1</m:mn></m:mrow></m:msubsup><m:mo>,</m:mo><m:msub><m:mi>𝒚</m:mi><m:mi>i</m:mi></m:msub><m:mo stretchy="false">)</m:mo></m:math>
					</p> <p>
ここで、古典版の第一引数は常に <m:math><m:msub><m:mi>𝒙</m:mi><m:mi>k</m:mi></m:msub></m:math> である。一方、修正版は <m:math><m:msubsup><m:mi>𝒘</m:mi><m:mi>k</m:mi><m:mrow><m:mi>i</m:mi><m:mo>-</m:mo><m:mn>1</m:mn></m:mrow></m:msubsup></m:math> でこれは <m:math><m:mi>i</m:mi><m:mo>=</m:mo><m:mn>1</m:mn></m:math> では古典版と同じだが、<m:math><m:mi>i</m:mi></m:math> が一つ増えるたびに各成分が除去されていくため、その絶対値も減少していく。これにより、平行成分の計算に誤差があっても、それも必ず減少していく。この積み重ねが原因で、修正版のほうが誤差が小さくなる。
					</p>
				</section>
			</section>
		</section>
	</body>
</html>
