<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja">
	<head>
		<title>Rust メモ: マクロによる識別子の導入</title>
		<link rel="stylesheet" href="style/base.css"/>
		<script src="lib/base.js"></script>
	</head>
	<body>
		<header>
			<h1><script>Base.insertTitle();</script></h1>
		</header>
		<p>
マクロの定義側と利用側で識別子を共有する方法について。
		</p> 
		<section>
			<h1>基礎知識</h1>
			<p>
マクロの定義側と利用側では、識別子のための空間が異なる。
			</p> <p>
これにより、定義側も利用側も識別子の衝突を気にせずにコーディングできる。
			</p> <p>
逆に、識別子を共有したい場合、識別子の名前をキャプチャ (<code>$</code> に続く識別子) で導入する。
			</p>
		</section> <section>
			<h1>失敗例</h1>
			<p>
以下では、マクロ <code>with_var_x</code> の定義側と利用側で識別子 <code>x</code> を共有していない。
			</p>
<pre><code class="language-rust">
macro_rules! with_var_x {
    {$($tt:tt)*} =&gt; {
        let x = "hello";
        $($tt)*
    }
}

fn main() {
    with_var_x! {
        println!("{<mark class="error">x</mark>}");
    }
}
</code></pre>
<pre><samp class="console-rustc">
<mark class="error">error[E0425]</mark><mark class="title">: cannot find value `x` in this scope</mark>
<mark class="info">  --&gt;</mark> src/main.rs:10:20
<mark class="info">   |</mark>
<mark class="info">10 |</mark>         println!("{x}");
<mark class="info">   |</mark>                    <mark class="error">^ not found in this scope</mark>
</samp></pre>
		</section> <section>
			<h1>解決策</h1>
			<p>
以下では、マクロ <code>with_var</code> の定義側と利用側で識別子 <code>x</code> を共有している。
			</p>
<pre><code class="language-rust">
macro_rules! with_var {
    (($var:ident) {$($tt:tt)*}) =&gt; {
        let $var = "hello";
        $($tt)*
    }
}

fn main() {
    with_var!((x) {
        println!("{x}");
    });
}
</code></pre>
		</section>
	</body>
</html>
