@charset "utf-8";

@layer
	import_color,
	root,
	default,
	normal,
	semantic,
	precode,
	ui,
	util,
	quote,
	import_nav,
	import_syntax_highlight,
	import_console_rustc,
	custom_nav,
	custom_prism;

@import url("color.css") layer(import_color);
@import url("../lib/nav/nav.css") layer(import_nav);
@import url("prism/light.css") layer(import_syntax_highlight) (prefers-color-scheme: light);
@import url("prism/dark.css") layer(import_syntax_highlight) (prefers-color-scheme: dark);
@import url("console_rustc.css") layer(import_console_rustc);

@layer root {
	:root {
		--mt-font: "Consolas", "Meiryo", monospace;
		font-family: "Meiryo", sans-serif;
		font-size: 0.93em;
		color: var(--fg-color);
	}

	/* TODO: FireFox が単位 lh に未対応。
	 * ⇒ 対応時は code-lh の使用箇所を削除。*/
	:root {
		--code-lh: 1.5em;
	}

	:lang(ja) {
		text-justify: inter-character;
	}

	@media screen {
		:root {
			background-color: var(--bg-color);
		}
	}

	@media screen and (width <= 55rem) {
		:root > body {
			margin: 1rem 1rem 2rem;
		}
	}

	@media screen and (width > 55rem) {
		:root > body {
			margin: 2rem 1rem 4rem 2rem;
		}
	}
}

@layer default {
	body, section {
		max-width: calc(42rem + 1px);
	}

	section {
		margin: 2rem 0 1rem;
	}

	h1 {
		font-size: 1.05em;
		margin: 1rem -0.5rem;
		padding: 0.5ex 0.5em;
		background-color: var(--header-color);
	}

	h2 {
		font-size: 1rem;
	}

	h2::before {
		content: "■ ";
	}

	p {
		margin: 0.5em 0;
		text-align: justify;
	}

	ul, ol {
		padding-left: 1.5em;
	}

	ul, ol, dl {
		margin: 0.5em 0;
	}

	q {
		quotes: "\201C" "\201D" "\2018" "\2019";
	}

	pre, samp, code, *.monospace {
		font-family: var(--mt-font);
		hyphens: none;
		tab-size: 4;
	}

	:not(h1):not(pre) > code {
		background-color: var(--shadow-color);
		margin: 0 -0.25ch;
		padding: 0 0.25ch;
		border-radius: 0.25ch;
	}

	a:link, a:visited {
		color: var(--link-color);
		text-decoration: none;
	}

	*.mt {
		font-family: var(--mt-font);
	}

	*.nw {
		white-space: nowrap;
	}

	@media all and (width > 55rem) {
		section section {
			margin-left: 1.5rem;
			margin-right: -1.5rem;
		}
	}

	@media all and (width <= 55rem) {
		section > section > h1::before {
			content: "> ";
		}

		section > section > section > h1::before {
			content: ">> ";
		}
	}
}

@layer normal {
	dl.normal {
		> dt::before {
			content: "≫";
			margin-right: 0.5ch;
		}

		> dd {
			margin-left: 1.5ch;
		}

		&.lowProfile {
			display: grid;
			grid-template-columns: auto minmax(0, 1fr);
		}

		&.lowProfile > dt {
			align-self: baseline;
		}

		&.lowProfile > dd {
			display: list-item;
			margin-left: 1.5em;
			padding-left: 0.5em;
			align-self: baseline;
		}

		&.lowProfile > dd::marker {
			content: "…";
		}

		&.highProfile > dt {
			margin-top: 2em;
		}

		&.highProfile > dd {
			margin: 1em 0 2em 2em;
		}
	}

	aside.normal {
		box-sizing: border-box;
		margin: 1rem -0.5rem;
		padding: 0 0.5rem;
		border-width: thick ;
		border-style: solid none;
		border-color: var(--thick-color);
		background-color: var(--fill-color);

		&::before {
			content: "";
			float: left;
			width: 2.2em;
			height: 2.2em;
			margin-right: 0.5ch;
			background-size: 2.2em;
			background-image: url("img/book_light.svg");
		}

		&.moan::before {
			background-image: url("img/unhappy.svg");
			filter: saturate(30%);
		}
	}

	@media screen and (prefers-color-scheme: dark) {
		aside.normal {
			&::before { 
				background-image: url("img/book_dark.svg");
			}

			&.moan::before {
				background-image: url("img/unhappy.svg");
				filter: saturate(20%) brightness(85%);
			}
		}
	}

	table.normal {
		margin: 1em 0;
		border-collapse: collapse;

		> tr > *,
		> * > tr > * {
			padding: 0.5ex 0.5ch;
			border: thin solid var(--edge-color);
		}
	}
}

@layer semantic {
	div.title {
		display: table;
		margin-bottom: 2rem;
		border: thin dashed red;
		padding: 1ex 1em;
	}

	div.sub {
		margin: 1rem 0;
	}

	div.sub:not(h1+*) {
		border-top: thin dashed;
	}
}

@layer precode {
	pre {
		> code:only-child {
			border-radius: 0.5rem;
		}

		> code:only-child,
		> samp:only-child {
			margin: 1em 0;
			border: thin solid;
			border-color: var(--edge-color);
			line-height: var(--code-lh);
		}

		> code:only-child,
		> samp:only-child {
			display: block;
			padding: 0.5rem;
			overflow: auto;
			scrollbar-width: thin;
			background-color: var(--code-bg-color);
		}

		> code:only-child::before,
		> samp:only-child::before {
			content: "";
			display: block;
			margin-bottom: calc(var(--code-lh) * -1);
			margin-bottom: -1lh;
		}
	}

	figure.file {
		font-family: var(--mt-font);
		margin: 1em 0;
	}

	figure.file > figcaption {
		border: thin solid;
		border-radius: 0.5rem 0.5rem 0 0;
		padding: 0.5ex 1ch 0.5ex;
		background-color: var(--path-bg-color);
		border-color: var(--edge-color);
	}

	figure.file > pre,
	figure.file > pre > code{
		margin-top: 0;
	}

	figure.file > pre > code {
		width: auto;
		border-top-style: none;
		border-top-left-radius: 0;
		border-top-right-radius: 0;
	}

	@media all and (width > 55rem) {
		figure.file,
		pre > code:only-child,
		pre > samp:only-child {
			width: 90ch;
		}
	}

	@media all and (width <= 55rem) {
		figure.file,
		pre > code:only-child,
		pre > samp:only-child {
			width: auto;
		}
	}
}

@layer ui {
	:root {
		overflow: auto scroll;
		scroll-behavior: smooth;
	}

	*:target {
		animation: firstHighlight 1.5s linear;
	}

	@keyframes firstHighlight {
		0% { background-color: #F84; }
	}

	@media screen {
		::selection {
			background-color: var(--selection-color);
		}
	}
}

@layer util {
	*.none {
		display: none !important;
	}

	*.todo {
		color: var(--x-color);
	}
}

@layer quote {
	blockquote {
		margin: 0;
		padding: 0 1em;
		border: thin dashed;

		&::before, &::after {
			content: "";
			margin-top: 2ex;
			display: block;
		}

		& * {
			all: revert;
		}

		& code {
			font-family: var(--mt-font);
		}

		& a:link, & a:visited {
			color: var(--link-color);
		}

		&[cite^="https://doc.rust-lang.org/"] {
			font-family: serif;
		}
	}

	@media screen and (prefers-color-scheme: light) {
		blockquote {
			background: hsla(0, 0%, 100%, 0.3);
		}
	}

	@media screen and (prefers-color-scheme: dark) {
		blockquote {
			background: hsla(0, 0%, 100%, 0.1);
		}
	}
}

@layer custom_nav {
	nav.forPage {
		--nav-bg-color: var(--bg-em-color);
		--nav-bd-color: var(--edge-color);
	}

	@media screen and (prefers-color-scheme: light) {
		nav.forPage {
			--nav-hl-color: hsla(0, 0%, 0%, 0.05);
		}
	}

	@media screen and (prefers-color-scheme: dark) {
		nav.forPage {
			--nav-hl-color: hsla(0, 0%, 100%, 0.05);
		}
	}
}

@layer custom_prism {
	pre[class*="language-"] {
		padding: unset;
		border-style: unset;
		border-radius: unset;
		box-shadow: unset;
		background-color: unset;
	}

	pre > code[class|="language"] mark.error {
		color: inherit;
		background-color: transparent;
		text-decoration: wavy underline rgba(255, 0, 0, 0.5);
		text-decoration-skip-ink: none;
	}
}

